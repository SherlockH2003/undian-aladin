# -*- coding: utf-8 -*-
"""Undian.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1clEUpDQxWWeoW5NJ6PBNx1zxopD-KwrL

<h1>PROGRAM UNDIAN NABUNG RUTIN ALFAMIDI</h1>

Program ini terdiri dari 2 kategori hadiah,

* Kategori Individual ; dan
* Kategori Cabang
<br><br>
---

<h2> KATEGORI INDIVIDUAL </h2>

Kategori individual terdiri dari 4 jenis hadiah.

1. Hadiah Utama : Senilai Rp 1 Juta rupiah untuk 3 pemenang dengan poin terbanyak
2. Hadiah Kedua : Senilai Rp 500 Ribu rupiah untuk 3 pemenang melalui undian
3. Hadiah Ketiga : Senilai Rp 250 Ribu rupiah untuk 10 pemenang melalui undian
4. Hadiah Keempat : Senilai Rp 100 Ribu rupiah untuk 30 pemenang melalui undian
<br><br>

---
<h2> KATEGORI CABANG </h2>

Kategori cabang berupa hadiah senilai Rp 250 ribu rupiah untuk pemenang-pemenang tiap cabang yang dipilih melalui undian. Kuota pemenang tiap cabang adalah sebagai berikut :

* Cabang Bitung, Bekasi : 6 orang
* Cabang Medan, Pasuruan, Palu, Makassar : 4 orang
* Cabang Boyolali, Samarinda, Manado, Kendari, Ambon, HO : 3 orang

---
Ketentuan tambahan : <br>
- Senior Manager atau diatasnya tidak boleh ikutan.

# Import Dependencies

Berikut adalah package yang harus diimport. Streamlit bukan termasuk package bawaan dari Python di Colab sehingga harus diinstal terlebih dahulu
"""

import pandas as pd
import numpy as np
import random as rd

"""# DATA PIPELINE

---
## ETL Data Karyawan

Data karyawan diekstraksi dari Google Spreadsheet menuju google colab secara sederhana tanpa API, hanya dengan link public saja, karena tidak membutuhkan akses write file. Selanjutnya data di transform supaya menjadi objek "DataFrame" bawaan "Pandas".
"""

# Extract & Transform Data
try:
    spreadsheet = "https://docs.google.com/spreadsheets/d/1NKT3lM1zkw2g-CkCaR5F_HTm1vvlYmw4EFjQmkBr6Fw/export?format=csv&gid=1788211216"
    df = pd.read_csv(spreadsheet)
    df_backup = df.copy()
except:
    path = "list_undian.csv"
    df = pd.read_csv(path)
    df_backup = df.copy()

# Loading Data

# Command terbawah yang akan ditampilkan
df.tail()
df.info()
df.Jabatan.unique()

"""---
## Data Cleaning

Berdasarkan ketentuan, pejabat yang tingkatnya setara atau di atas SM (Senior Manager) tidak boleh mengikuti program nabung rutin. Dengan demikian, kita harus menentukan terlebih dahulu jabatan apa saja yang berada diatas SM, kemudian menghapusnya dari daftar peserta.
"""

# TOKENIZER

jabatan_token = {
    'CREW' : 0,
    'IT' : 3,
    'TSM' : 4,
    'MD' : 1,
    'ACOS' : 1,
    'WH' : 3,
    'SM' : 7,
    'OPR' : 4,
    'COS' : 2,
    'PD' : 4,
    'LND' : 3,
    'GM' : 8
}

df['Jabatan Numerik'] = df.Jabatan.map(jabatan_token)
df[['Jabatan Numerik','Jabatan']]

df[df['Jabatan Numerik'] > 7]

"""Dengan demikian, Jabatan bisa diurut secara numerik berdasarkan bobot hierarkisnya."""

df = df[df['Jabatan Numerik'] < 7]
df

"""## Data Segmentation

Berdasarkan narasi sebelumnya, hadiah yang akan dibagikan memiliki ketentuan sebagai berikut :

1. Hadiah Utama : Senilai Rp 1 Juta rupiah untuk 3 pemenang dengan poin terbanyak
2. Hadiah Kedua : Senilai Rp 500 Ribu rupiah untuk 3 pemenang melalui undian
3. Hadiah Ketiga : Senilai Rp 250 Ribu rupiah untuk 10 pemenang melalui undian
4. Hadiah Keempat : Senilai Rp 100 Ribu rupiah untuk 30 pemenang melalui undian

---

Ketentuan tambahan :

* <b>Hadiah kedua <br></b>
Hadiah kedua diundi dengan cara mengelompokkan karyawan yang memiliki poin setara atau diatas KKM (Kriteria Ketuntasan Minimum) dan belum pernah memenangi hadiah pertama.

* <b>Hadiah ketiga dan keempat <br></b>
Hadiah ketiga dan keempat diundi dengan cara mengambil sample sebanyak X dari masing-masing cabang, dan menggabungkannya ke dalam satu sampel yang sama. Hadiah ini hanya bisa diikuti oleh karyawan yang memiliki poin di bawah KKM.

* <b>Hadiah cabang <br></b>
Hadiah cabang diundi dengan cara mengundi karyawan yang ada di cabang-cabang tertentu berdasarkan kuota yang ditentukan di tiap cabang. Peserta hadiah cabang adalah peserta yang tidak pernah menang undian.

---

### Kuota Pemenang dan Hadiah Utama

Tentukan dulu berapa kuota pemenang di setiap kategori hadiah.

Untuk hadiah utama langsung saja undi 3 orang dengan nilai point terbesar.
"""

# KUOTA PEMENANG
kuota_pemenang = {
    'Hadiah Utama' : 3,
    'Hadiah Kedua' : 3,
    'Hadiah Ketiga' : 10,
    'Hadiah Keempat' : 30
}

pemenang = {
    'Hadiah Utama' : pd.DataFrame(),
    'Hadiah Kedua' : pd.DataFrame(),
    'Hadiah Ketiga' : pd.DataFrame(),
    'Hadiah Keempat' :pd.DataFrame(),
    'Hadiah Cabang' : pd.DataFrame()
}
# -----------------
# Fungsi bantu: ambil pemenang undian dengan probabilitas, sambil mengecualikan pemenang sebelumnya
# -----------------
def draw_winners(df, kuota, exclude_index=None, probability_col='Point'):
    if exclude_index is not None:
        df = df[~df.index.isin(exclude_index)]
    df = df.copy()
    df['Probability'] = df[probability_col] / df[probability_col].sum()
    if len(df) <= kuota:
        return df
    else:
        selected_idx = np.random.choice(df.index, kuota, replace=False, p=df['Probability'])
        return df.loc[selected_idx]

# -----------------
# HADIAH UTAMA
# -----------------
H1W = {
    "Warehouse" : pd.DataFrame(),
    "Office" : pd.DataFrame(),
    "Toko" : pd.DataFrame()
}

C1 = df[df['Point'] == df.Point.max()]
if not C1[C1['Area Kerja'] == "Warehouse"].empty:
    H1W['Warehouse'] = C1[C1['Area Kerja'] == "Warehouse"].sample(1)
if not C1[C1['Area Kerja'] == "Office"].empty:
    H1W['Office'] = C1[C1['Area Kerja'] == "Office"].sample(1)
if not C1[C1['Area Kerja'] == "Toko"].empty:
    H1W['Toko'] = C1[C1['Area Kerja'] == "Toko"].sample(1)

H1W_all = pd.concat(H1W.values())
pemenang['Hadiah Utama'] = H1W_all

# -----------------
# HADIAH KEDUA
# -----------------
H2W = draw_winners(df.copy(), kuota_pemenang['Hadiah Kedua'], exclude_index=H1W_all.index)
pemenang['Hadiah Kedua'] = H2W

# -----------------
# HADIAH KETIGA
# -----------------
df_UnderKKM = df.copy()
C3_candidates = df_UnderKKM[~df_UnderKKM.index.isin(H1W_all.index.union(H2W.index))]

df_branch = {}
sample_branch = {}
JUMLAH_SAMPLE = 3
for cabang, isi in C3_candidates.groupby('Branch'):
    df_branch[cabang] = isi
    if len(isi) <= JUMLAH_SAMPLE:
        sample_branch[cabang] = isi
    else:
        sample_branch[cabang] = isi.sample(JUMLAH_SAMPLE)

C3 = pd.concat(sample_branch.values())
H3W = draw_winners(C3, kuota_pemenang['Hadiah Ketiga'])
pemenang['Hadiah Ketiga'] = H3W

# -----------------
# HADIAH KEEMPAT
# -----------------
C4_candidates = df[~df.index.isin(H1W_all.index.union(H2W.index).union(H3W.index))]
H4W = draw_winners(C4_candidates, kuota_pemenang['Hadiah Keempat'])
pemenang['Hadiah Keempat'] = H4W

# -----------------
# HADIAH CABANG
# -----------------
df_cabang = df[~df.index.isin(H1W_all.index.union(H2W.index).union(H3W.index).union(H4W.index))]
data_cabang = {} 
kuota_cabang = {'Branch Samarinda': 3, 
                'Branch Ambon': 3, 
                'Branch Manado': 3, 
                'Head Office': 3, 
                'Branch Boyolali': 3, 
                'Branch Bekasi': 6, 
                'Branch Palu': 4, 
                'Branch Medan': 4, 
                'Branch Bitung': 6, 
                'Branch Kendari': 3, 
                'Branch Makasar': 4, 
                'Branch Pasuruan': 4 } 
HCW = {}

for cabang, isi in df_cabang.groupby('Branch'):
    kuota = kuota_cabang.get(cabang, 0)
    if len(isi) <= kuota:
        HCW[cabang] = isi
    else:
        HCW[cabang] = draw_winners(isi, kuota)
pemenang['Hadiah Cabang'] = pd.concat(HCW.values())
