# -*- coding: utf-8 -*-
"""Undian.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1clEUpDQxWWeoW5NJ6PBNx1zxopD-KwrL

<h1>PROGRAM UNDIAN NABUNG RUTIN ALFAMIDI</h1>

Program ini terdiri dari 2 kategori hadiah,

* Kategori Individual ; dan
* Kategori Cabang
<br><br>
---

<h2> KATEGORI INDIVIDUAL </h2>

Kategori individual terdiri dari 4 jenis hadiah.

1. Hadiah Utama : Senilai Rp 1 Juta rupiah untuk 3 pemenang dengan poin terbanyak
2. Hadiah Kedua : Senilai Rp 500 Ribu rupiah untuk 3 pemenang melalui undian
3. Hadiah Ketiga : Senilai Rp 250 Ribu rupiah untuk 10 pemenang melalui undian
4. Hadiah Keempat : Senilai Rp 100 Ribu rupiah untuk 30 pemenang melalui undian
<br><br>

---
<h2> KATEGORI CABANG </h2>

Kategori cabang berupa hadiah senilai Rp 250 ribu rupiah untuk pemenang-pemenang tiap cabang yang dipilih melalui undian. Kuota pemenang tiap cabang adalah sebagai berikut :

* Cabang Bitung, Bekasi : 6 orang
* Cabang Medan, Pasuruan, Palu, Makassar : 4 orang
* Cabang Boyolali, Samarinda, Manado, Kendari, Ambon, HO : 3 orang

---
Ketentuan tambahan : <br>
- Senior Manager atau diatasnya tidak boleh ikutan.

# Import Dependencies

Berikut adalah package yang harus diimport. Streamlit bukan termasuk package bawaan dari Python di Colab sehingga harus diinstal terlebih dahulu
"""

import pandas as pd
import numpy as np
import random as rd

"""# DATA PIPELINE

---
## ETL Data Karyawan

Data karyawan diekstraksi dari Google Spreadsheet menuju google colab secara sederhana tanpa API, hanya dengan link public saja, karena tidak membutuhkan akses write file. Selanjutnya data di transform supaya menjadi objek "DataFrame" bawaan "Pandas".
"""

# Extract & Transform Data
spreadsheet = "https://docs.google.com/spreadsheets/d/1NKT3lM1zkw2g-CkCaR5F_HTm1vvlYmw4EFjQmkBr6Fw/export?format=csv&gid=1788211216"
df = pd.read_csv(spreadsheet)
df_backup = df.copy()

# Loading Data

# Command terbawah yang akan ditampilkan
df.tail()
df.info()
df.Jabatan.unique()

"""---
## Data Cleaning

Berdasarkan ketentuan, pejabat yang tingkatnya setara atau di atas SM (Senior Manager) tidak boleh mengikuti program nabung rutin. Dengan demikian, kita harus menentukan terlebih dahulu jabatan apa saja yang berada diatas SM, kemudian menghapusnya dari daftar peserta.
"""

# TOKENIZER

jabatan_token = {
    'CREW' : 0,
    'IT' : 3,
    'TSM' : 4,
    'MD' : 1,
    'ACOS' : 1,
    'WH' : 3,
    'SM' : 7,
    'OPR' : 4,
    'COS' : 2,
    'PD' : 4,
    'LND' : 3
}

df['Jabatan Numerik'] = df.Jabatan.map(jabatan_token)
df[['Jabatan Numerik','Jabatan']]

df[df['Jabatan Numerik'] >= 7]

"""Dengan demikian, Jabatan bisa diurut secara numerik berdasarkan bobot hierarkisnya."""

df = df[df['Jabatan Numerik'] < 7]
df

"""## Data Segmentation

Berdasarkan narasi sebelumnya, hadiah yang akan dibagikan memiliki ketentuan sebagai berikut :

1. Hadiah Utama : Senilai Rp 1 Juta rupiah untuk 3 pemenang dengan poin terbanyak
2. Hadiah Kedua : Senilai Rp 500 Ribu rupiah untuk 3 pemenang melalui undian
3. Hadiah Ketiga : Senilai Rp 250 Ribu rupiah untuk 10 pemenang melalui undian
4. Hadiah Keempat : Senilai Rp 100 Ribu rupiah untuk 30 pemenang melalui undian

---

Ketentuan tambahan :

* <b>Hadiah kedua <br></b>
Hadiah kedua diundi dengan cara mengelompokkan karyawan yang memiliki poin setara atau diatas KKM (Kriteria Ketuntasan Minimum) dan belum pernah memenangi hadiah pertama.

* <b>Hadiah ketiga dan keempat <br></b>
Hadiah ketiga dan keempat diundi dengan cara mengambil sample sebanyak X dari masing-masing cabang, dan menggabungkannya ke dalam satu sampel yang sama. Hadiah ini hanya bisa diikuti oleh karyawan yang memiliki poin di bawah KKM.

* <b>Hadiah cabang <br></b>
Hadiah cabang diundi dengan cara mengundi karyawan yang ada di cabang-cabang tertentu berdasarkan kuota yang ditentukan di tiap cabang. Peserta hadiah cabang adalah peserta yang tidak pernah menang undian.

---

### Kuota Pemenang dan Hadiah Utama

Tentukan dulu berapa kuota pemenang di setiap kategori hadiah.

Untuk hadiah utama langsung saja undi 3 orang dengan nilai point terbesar.
"""

# KUOTA PEMENANG
kuota_pemenang = {
    'Hadiah Utama' : 3,
    'Hadiah Kedua' : 3,
    'Hadiah Ketiga' : 10,
    'Hadiah Keempat' : 30
}

pemenang = {
    'Hadiah Utama' : pd.DataFrame(),
    'Hadiah Kedua' : pd.DataFrame(),
    'Hadiah Ketiga' : pd.DataFrame(),
    'Hadiah Keempat' :pd.DataFrame(),
    'Hadiah Cabang' : pd.DataFrame()
}

# -----------------
# HADIAH UTAMA
# -----------------
C1 = df[df['Point'] == df.Point.max()]
C1['Probability'] = C1['Point']/C1['Point'].sum()
H1W = np.random.choice(C1.index, kuota_pemenang['Hadiah Kedua'], replace=False,p=C1['Probability'])
H1W = C1.loc[H1W]
pemenang['Hadiah Utama'] = H1W
pemenang['Hadiah Utama']

"""---

### Hadiah Kedua

Untuk mencari peserta hadiah kedua pertama-tama, hapus dulu pemenang hadiah pertama supaya mereka tidak bisa masuk ke peserta undian hadiah kedua.


kemudian, cari data peserta yang point-nya lebih besar dari KKM (Kriteria Ketuntasan Minimum) untuk diundi.
"""

KKM = 46
probabilitas = df['Point'] / df.Point.sum()
probabilitas

# -----------------
# HADIAH KEDUA
# -----------------

df = df[~df.index.isin(H1W.index)] # EXCLUDE DATA PEMENANG HADIAH UTAMA
C2 = df[df['Point'] >= KKM].copy()
C2['Probability'] = C2['Point']/C2['Point'].sum()
H2W = np.random.choice(C2.index, kuota_pemenang['Hadiah Kedua'], p=C2['Probability'], replace=False)
H2W = C2.loc[H2W]
pemenang['Hadiah Kedua'] = H2W
pemenang['Hadiah Kedua']
# print(len(df))

"""---

### Hadiah Ketiga

Data peserta pertama-tama dibagi berdasarkan branch supaya pemerataannya lebih adil, kemudian dari masing-masing brach akan diambil beberapa orang secara acak. Lalu orang yang diambil secara acak dari masing-masing branch ini akan digabungkan untuk diundi.
"""

# -----------------
# HADIAH KETIGA
# -----------------

df = df[(~df.index.isin(H2W.index))]
df_UnderKKM = df[df['Point'] < KKM]

# GROUPING
df_branch    = {} # nama_cabang : data_peserta
sample_branch = {} # nama_cabang : X data, dengan X = jumlah sampel

for cabang, isi in df_UnderKKM.groupby('Branch'): # df.groupby itu udah otomatis sortir dan filter
    df_branch[cabang] = isi

# SAMPLING
JUMLAH_SAMPLE = 3

for cabang, isi in df_branch.items():
    if len(isi) <= JUMLAH_SAMPLE:
        sample_branch[cabang] = isi
    else:
        sample_branch[cabang] = isi.sample(JUMLAH_SAMPLE)

# MERGE
C3 = pd.concat(sample_branch.values())
C3['Probability']=C3['Point']/C3['Point'].sum()
H3W = np.random.choice(C3.index, kuota_pemenang['Hadiah Ketiga'], replace=False, p=C3['Probability'])
H3W = C3.loc[H3W]
pemenang['Hadiah Ketiga'] = H3W
pemenang['Hadiah Ketiga']
# print(len(df))

"""---

### Hadiah Keempat

...

"""

# -----------------
# HADIAH KEEMPAT
# -----------------
df  = df[(~df.index.isin(H3W.index))]
C4 = df
C4['Probability'] = C4['Point']/C4['Point'].sum()
H4W = np.random.choice(C4.index, kuota_pemenang['Hadiah Keempat'], replace=False, p=C4['Probability'])
H4W = df.loc[H4W]
pemenang['Hadiah Keempat'] = H4W
pemenang['Hadiah Keempat']
# print(len(df))

# df  = df[(~df.index.isin(H4W.index))]
# print(len(df))

"""---

### Hadiah Cabang

Hadiah cabang dipilih dengan mengacak peserta dari cabangnya masing-masing dan mengundi beberapa orang sebagai pemenang berdasarkan kuota cabang masing-masing

"""

# -----------------
# HADIAH CABANG
# -----------------

df = df[(~df.index.isin(H4W.index))]

data_cabang = {}
kuota_cabang = {
    'Samarinda': 3,
    'Ambon': 3,
    'HO': 3,
    'Boyolali': 3,
    'Bekasi': 6,
    'Palu': 4,
    'Medan': 4,
    'Bitung': 6,
    'Kendari': 3,
    'Makassar': 4,
    'Pasuruan': 4
}
HCW = {}

for cabang, isi in df.groupby('Branch'):
    data_cabang[cabang] = isi

for cabang, isi in data_cabang.items():
    if len(isi) <= kuota_cabang[cabang]:
        HCW[cabang] = isi
    else:
        HCW[cabang] = np.random.choice(isi.index, kuota_cabang[cabang], replace=False, p=isi['Point']/isi['Point'].sum())
        HCW[cabang] = isi.loc[HCW[cabang]]

pemenang['Hadiah Cabang'] = pd.concat(HCW.values())
pemenang['Hadiah Cabang']
